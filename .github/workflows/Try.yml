name: Crawl Data

on: [push]  # Trigger on push events (customize as needed)

jobs:
  crawl_data:
    runs-on: ubuntu-latest  # Run the job on an Ubuntu runner

    steps:
      - uses: actions/checkout@v4  # Checkout the repository code

      - uses: actions/cache@v4  # Cache pip dependencies
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}  # Cache based on requirements.txt

      - name: Install dependencies (if no cache hit)  # Fallback for cache miss
        run: pip install -r requirements.txt  # Install dependencies from requirements.txt

      - name: Install system dependencies  # System dependencies installation
        run: |
          apt-get update
          apt-get install -y libicu-dev libsnappy-dev build-essential

      - name: Install Python packages (from requirements.txt)
        run: pip install -r requirements.txt  # Install Python packages defined in requirements.txt

      - name: Install OpenSanctions (assuming in ./zavod)
        run: |
          python -m pip install -e ./zavod[dev]

      - name: Configure Pywikibot
        run: |
          echo 'PYWIKIBOT_NO_USER_CONFIG=1' >> $GITHUB_ENV
          echo "mylang = 'en'" >> user-config.py
          echo "family = 'wikipedia'" >> user-config.py

      - name: Loop through dataset YAML files and crawl data
        run: |
          for dataset_file in $(find opensanctions/datasets -name "*.yml"); do
            echo "Crawling data from: $dataset_file"
            python zavod.py crawl "$dataset_file" || exit 1  # Exit with non-zero code on error
          done

      - name: Set ZAVOD_RESOLVER_PATH (optional, adjust as needed)
        env:
          ZAVOD_RESOLVER_PATH: ${{ runner.workspace }}/opensanctions/zavod/zavod/resolver

      - name: Export data (optional, adjust path as needed)
        run: |
          python zavod.py export ${{ runner.workspace }}/opensanctions
